extern objStruct;

static DefineMemory(void)
{
	SegDelete(0xFF0F00, 0);
	SegCreate(0xFF0F00, 0xFF5000, 0, 1, 1, 0);
	SegRename(0xFF0000, "RAMLO");
	SegDelete(0xFFFFA000, 0);
	SegCreate(0xFFFFA000 & addrMask, 0xFFFFFD00 & addrMask, 0, 1, 1, 0);
	SegRename(0xFFFFA000 & addrMask, "RAMHI");
	
	SegDelete(0xC00000, 0);
	SegCreate(0xC00000, 0xC0000A, 0, 1, 1, 0);
	SegRename(0xC00000, "VDP");
	DefineVariable(0xC00000, "VDPDATA", 4);
	DefineVariable(0xC00004, "VDPCTRL", 4);
	DefineVariable(0xC00008, "VDPHV", 2);
	
	SegDelete(0xA00000, 0);
	SegCreate(0xA00000, 0xA02000, 0, 1, 1, 0);
	SegRename(0xA00000, "Z80RAM");
	DefineVariable(0xA00000, "Z80RAM", 0x2000);
	
	SegDelete(0xA10000, 0);
	SegCreate(0xA10000, 0xA1000E, 0, 1, 1, 0);
	SegRename(0xA10000, "IO");
	DefineVariable(0xA10001, "VERSION", 1);
	DefineVariable(0xA10003, "IODATA1", 1);
	DefineVariable(0xA10005, "IODATA2", 1);
	DefineVariable(0xA10007, "IODATA3", 1);
	DefineVariable(0xA10009, "IOCTRL1", 1);
	DefineVariable(0xA1000B, "IOCTRL2", 1);
	DefineVariable(0xA1000D, "IOCTRL3", 1);
	
	SegDelete(0xA11100, 0);
	SegCreate(0xA11100, 0xA11202, 0, 1, 1, 0);
	SegRename(0xA11100, "Z80IO");
	DefineVariable(0xA11100, "Z80BUS", 2);
	DefineVariable(0xA11200, "Z80RESET", 2);
	
	SegDelete(0xA12000, 0);
	SegCreate(0xA12000, 0xA12030, 0, 1, 1, 0);
	SegRename(0xA12000, "GATEARRAY");
	DefineVariable(0xA12000, "GAIRQ2", 1);
	DefineVariable(0xA12001, "GARESET", 1);
	DefineVariable(0xA12002, "GAPROTECT", 1);
	DefineVariable(0xA12003, "GAMEMMODE", 1);
	DefineVariable(0xA12004, "GACDCMODE", 2);
	DefineVariable(0xA12006, "GAUSERHINT", 2);
	DefineVariable(0xA12008, "GACDCHOST", 2);
	DefineVariable(0xA1200C, "GASTOPWATCH", 2);
	DefineVariable(0xA1200E, "GAMAINFLAG", 1);
	DefineVariable(0xA1200F, "GASUBFLAG", 1);
	DefineVariable(0xA12010, "GACOMCMD0", 1);
	DefineVariable(0xA12011, "GACOMCMD1", 1);
	DefineVariable(0xA12012, "GACOMCMD2", 1);
	DefineVariable(0xA12013, "GACOMCMD3", 1);
	DefineVariable(0xA12014, "GACOMCMD4", 1);
	DefineVariable(0xA12015, "GACOMCMD5", 1);
	DefineVariable(0xA12016, "GACOMCMD6", 1);
	DefineVariable(0xA12017, "GACOMCMD7", 1);
	DefineVariable(0xA12018, "GACOMCMD8", 1);
	DefineVariable(0xA12019, "GACOMCMD9", 1);
	DefineVariable(0xA1201A, "GACOMCMDA", 1);
	DefineVariable(0xA1201B, "GACOMCMDB", 1);
	DefineVariable(0xA1201C, "GACOMCMDC", 1);
	DefineVariable(0xA1201D, "GACOMCMDD", 1);
	DefineVariable(0xA1201E, "GACOMCMDE", 1);
	DefineVariable(0xA1201F, "GACOMCMDF", 1);
	DefineVariable(0xA12020, "GACOMSTAT0", 1);
	DefineVariable(0xA12021, "GACOMSTAT1", 1);
	DefineVariable(0xA12022, "GACOMSTAT2", 1);
	DefineVariable(0xA12023, "GACOMSTAT3", 1);
	DefineVariable(0xA12024, "GACOMSTAT4", 1);
	DefineVariable(0xA12025, "GACOMSTAT5", 1);
	DefineVariable(0xA12026, "GACOMSTAT6", 1);
	DefineVariable(0xA12027, "GACOMSTAT7", 1);
	DefineVariable(0xA12028, "GACOMSTAT8", 1);
	DefineVariable(0xA12029, "GACOMSTAT9", 1);
	DefineVariable(0xA1202A, "GACOMSTATA", 1);
	DefineVariable(0xA1202B, "GACOMSTATB", 1);
	DefineVariable(0xA1202C, "GACOMSTATC", 1);
	DefineVariable(0xA1202D, "GACOMSTATD", 1);
	DefineVariable(0xA1202E, "GACOMSTATE", 1);
	DefineVariable(0xA1202F, "GACOMSTATF", 1);
}

static DefineVariables(void)
{
	DefineVariable(0xFF0F00, "ipxVSync", 1);
	DefineVariable(0xFF0F01, "timeAttackMode", 1);
	DefineVariable(0xFF0F02, "savedStage", 2);
	DefineVariable(0xFF0F10, "timeAttackTime", 4);
	DefineVariable(0xFF0F14, "timeAttackStage", 2);
	DefineVariable(0xFF0F16, "ipxVDPReg1", 2);
	DefineVariable(0xFF0F18, "timeAttackUnlock", 1);
	DefineVariable(0xFF0F19, "unkBuRAMVar", 1);
	DefineVariable(0xFF0F1A, "goodFutures", 1);
	DefineVariable(0xFF0F1C, "demoID", 1);
	DefineVariable(0xFF0F1D, "titleFlags", 1);
	DefineVariable(0xFF0F1F, "saveDisabled", 1);
	DefineVariable(0xFF0F20, "timeStones", 1);
	DefineVariable(0xFF0F21, "curSpecStage", 1);
	DefineVariable(0xFF0F22, "palClearFlags", 1);
	DefineVariable(0xFF0F24, "endingID", 1);
	DefineVariable(0xFF0F25, "specStageLost", 1);
	DefineVariable(0xFF1000, "unkBuffer", 0x200);
	DefineVariable(0xFF1200, "objectStates", 0x2FE);
	DefineVariable(0xFF1502, "stageRestart", 2);
	DefineVariable(0xFF1504, "stageFrames", 2);
	DefineVariable(0xFF1506, "zone", 1);
	DefineVariable(0xFF1507, "act", 1);
	DefineVariable(0xFF1508, "lives", 1);
	DefineVariable(0xFF1509, "usePlayer2", 1);
	DefineVariable(0xFF150A, "drownTimer", 2);
	DefineVariable(0xFF150C, "timeOver", 1);
	DefineVariable(0xFF150D, "livesFlags", 1);
	DefineVariable(0xFF150E, "updateHUDLives", 1);
	DefineVariable(0xFF150F, "updateHUDRings", 1);
	DefineVariable(0xFF1510, "updateHUDTime", 1);
	DefineVariable(0xFF1511, "updateHUDScore", 1);
	DefineVariable(0xFF1512, "rings", 2);
	DefineVariable(0xFF1514, "time", 1);
	DefineVariable(0xFF1515, "timeMinutes", 1);
	DefineVariable(0xFF1516, "timeSeconds", 1);
	DefineVariable(0xFF1517, "timeFrames", 1);
	DefineVariable(0xFF1518, "score", 4);
	DefineVariable(0xFF151C, "plcLoadFlags", 1);
	DefineVariable(0xFF151D, "palFadeFlags", 1);
	DefineVariable(0xFF151E, "shield", 1);
	DefineVariable(0xFF151F, "invincible", 1);
	DefineVariable(0xFF1520, "speedShoes", 1);
	DefineVariable(0xFF1521, "timeWarp", 1);
	DefineVariable(0xFF1522, "spawnMode", 1);
	DefineVariable(0xFF1523, "savedSpawnMode", 1);
	DefineVariable(0xFF1524, "savedX", 2);
	DefineVariable(0xFF1526, "savedY", 2);
	DefineVariable(0xFF1528, "warpRings", 2);
	DefineVariable(0xFF152A, "savedTime", 4);
	DefineVariable(0xFF152E, "timeZone", 1);
	DefineVariable(0xFF1530, "savedBtmBound", 2);
	DefineVariable(0xFF1532, "savedCamX", 2);
	DefineVariable(0xFF1534, "savedCamY", 2);
	DefineVariable(0xFF1536, "savedCamBgX", 2);
	DefineVariable(0xFF1538, "savedCamBgY", 2);
	DefineVariable(0xFF153A, "savedCamBg2X", 2);
	DefineVariable(0xFF153C, "savedCamBg2Y", 2);
	DefineVariable(0xFF153E, "savedCamBg3X", 2);
	DefineVariable(0xFF1540, "savedCamBg3Y", 2);
	DefineVariable(0xFF1542, "savedWaterHeight", 1);
	DefineVariable(0xFF1543, "savedWaterRoutine", 1);
	DefineVariable(0xFF1544, "savedWaterFull", 1);
	DefineVariable(0xFF1545, "warpLivesFlags", 1);
	DefineVariable(0xFF1546, "warpSpawnMode", 1);
	DefineVariable(0xFF1548, "warpX", 2);
	DefineVariable(0xFF154A, "warpY", 2);
	DefineVariable(0xFF154C, "warpPlayerFlags", 1);
	DefineVariable(0xFF154E, "warpBtmBound", 2);
	DefineVariable(0xFF1550, "warpCamX", 2);
	DefineVariable(0xFF1552, "warpCamY", 2);
	DefineVariable(0xFF1554, "warpCamBgX", 2);
	DefineVariable(0xFF1556, "warpCamBgY", 2);
	DefineVariable(0xFF1558, "warpCamBg2X", 2);
	DefineVariable(0xFF155A, "warpCamBg2Y", 2);
	DefineVariable(0xFF155C, "warpCamBg3X", 2);
	DefineVariable(0xFF155E, "warpCamBg3Y", 2);
	DefineVariable(0xFF1560, "warpWaterHeight", 2);
	DefineVariable(0xFF1562, "warpWaterRoutine", 1);
	DefineVariable(0xFF1563, "warpWaterFull", 1);
	DefineVariable(0xFF1564, "warpGVel", 2);
	DefineVariable(0xFF1566, "warpXVel", 2);
	DefineVariable(0xFF1568, "warpYVel", 2);
	DefineVariable(0xFF156A, "goodFuture", 1);
	DefineVariable(0xFF156B, "powerup", 1);
	DefineVariable(0xFF156C, "unkStageFlag", 1);
	DefineVariable(0xFF156D, "projDestroyed", 1);
	DefineVariable(0xFF156E, "specialStage", 1);
	DefineVariable(0xFF156F, "combineRing", 1);
	DefineVariable(0xFF1570, "warpTime", 4);
	DefineVariable(0xFF1574, "sectionID", 2);
	DefineVariable(0xFF1577, "amyCaptured", 1);
	DefineVariable(0xFF1578, "nextLifeScore", 4);
	DefineVariable(0xFF157C, "debugAngle", 1);
	DefineVariable(0xFF157D, "debugAngleShift", 1);
	DefineVariable(0xFF157E, "debugQuadrant", 1);
	DefineVariable(0xFF157F, "debugFloorDist", 1);
	DefineVariable(0xFF1580, "demoMode", 2);
	DefineVariable(0xFF1584, "s1CreditsIndex", 2);
	DefineVariable(0xFF1586, "versionCache", 1);
	DefineVariable(0xFF1588, "debugCheat", 2);
	DefineVariable(0xFF158A, "initFlag", 4);
	DefineVariable(0xFF158E, "checkpoint", 1);
	DefineVariable(0xFF1590, "goodFutureFlags", 1);
	DefineVariable(0xFF1591, "savedMiniSonic", 1);
	DefineVariable(0xFF1593, "warpMiniSonic", 1);
	DefineVariable(0xFF1600, "flowerPosBuf", 0x300);
	DefineVariable(0xFF1900, "flowerCount", 3);
	DefineVariable(0xFF1903, "fadeEnableDisplay", 1);
	DefineVariable(0xFF1904, "debugObject", 1);
	DefineVariable(0xFF1906, "debugMode", 2);
	DefineVariable(0xFF190A, "stageVIntFrames", 4);
	DefineVariable(0xFF190E, "timeStopTimer", 2);
	DefineVariable(0xFF1910, "logSpikeAnimTimer", 1);
	DefineVariable(0xFF1911, "logSpikeAnimFrame", 1);
	DefineVariable(0xFF1912, "ringAnimTimer", 1);
	DefineVariable(0xFF1913, "ringAnimFrame", 1);
	DefineVariable(0xFF1914, "unkAnimTimer", 1);
	DefineVariable(0xFF1915, "unkAnimFrame", 1);
	DefineVariable(0xFF1916, "ringLossAnimTimer", 1);
	DefineVariable(0xFF1917, "ringLossAnimFrame", 1);
	DefineVariable(0xFF1918, "ringLossAnimAccum", 1);
	DefineVariable(0xFF1926, "camXCopy", 4);
	DefineVariable(0xFF192A, "camYCopy", 4);
	DefineVariable(0xFF192E, "camXBgCopy", 4);
	DefineVariable(0xFF1932, "camYBgCopy", 4);
	DefineVariable(0xFF1936, "camXBg2Copy", 4);
	DefineVariable(0xFF193A, "camYBg2Copy", 4);
	DefineVariable(0xFF193E, "camXBg3Copy", 4);
	DefineVariable(0xFF1942, "camYBg3Copy", 4);
	DefineVariable(0xFF1946, "scrollFlagsCopy", 2);
	DefineVariable(0xFF1948, "scrollFlagsBgCopy", 2);
	DefineVariable(0xFF194A, "scrollFlagsBg2Copy", 2);
	DefineVariable(0xFF194C, "scrollFlagsBg3Copy", 2);
	DefineVariable(0xFF194E, "debugBlock", 2);
	DefineVariable(0xFF1950, "cczNoBumper", 1);
	DefineVariable(0xFF1954, "debugSubtype2", 1);
	DefineVariable(0xFF1955, "waterSwayAngle", 1);
	DefineVariable(0xFF1956, "layer", 1);
	DefineVariable(0xFF1957, "stageStarted", 1);
	DefineVariable(0xFF1958, "bossMusic", 1);
	DefineVariable(0xFF195A, "wwzBeamMode", 1);
	DefineVariable(0xFF195B, "miniSonic", 1);
	DefineVariable(0xFF1980, "aniArtBuffer", 0x480);
	DefineVariable(0xFF1E00, "scrlSectSpeeds", 0x200);
	DefineVariable(0xFF2000, "blockBuffer", 0x2000);
	DefineVariable(0xFF4000, "unkBuffer2", 0x1000);
	
	DefineVariable(0xFFFFA000 & addrMask, "stageLayout", 0x800);
	DefineVariable(0xFFFFA800 & addrMask, "deformBuffer", 0x200);
	DefineVariable(0xFFFFAA00 & addrMask, "nemBuffer", 0x200);
	DefineVariable(0xFFFFAC00 & addrMask, "objDrawQueue", 0x400);
	DefineVariable(0xFFFFC800 & addrMask, "sonicArtBuf", 0x300);
	DefineVariable(0xFFFFCB00 & addrMask, "sonicRecordBuf", 0x100);
	DefineVariable(0xFFFFCC00 & addrMask, "hscroll", 0x400);
	DefineVariable(0xFFFFF00A & addrMask, "fmSndQueue1", 1);
	DefineVariable(0xFFFFF00B & addrMask, "fmSndQueue2", 1);
	DefineVariable(0xFFFFF00C & addrMask, "fmSndQueue3", 1);
	DefineVariable(0xFFFFF600 & addrMask, "gameMode", 1);
	DefineVariable(0xFFFFF602 & addrMask, "playerCtrlHold", 1);
	DefineVariable(0xFFFFF603 & addrMask, "playerCtrlTap", 1);
	DefineVariable(0xFFFFF604 & addrMask, "p1CtrlHold", 1);
	DefineVariable(0xFFFFF605 & addrMask, "p1CtrlTap", 1);
	DefineVariable(0xFFFFF606 & addrMask, "p2CtrlHold", 1);
	DefineVariable(0xFFFFF607 & addrMask, "p2CtrlTap", 1);
	DefineVariable(0xFFFFF60C & addrMask, "vdpReg01", 2);
	DefineVariable(0xFFFFF614 & addrMask, "vintTimer", 2);
	DefineVariable(0xFFFFF616 & addrMask, "vscrollScreen", 4);
	DefineVariable(0xFFFFF61A & addrMask, "hscrollScreen", 4);
	DefineVariable(0xFFFFF624 & addrMask, "vdpReg0A", 2);
	DefineVariable(0xFFFFF626 & addrMask, "palFadeStart", 1);
	DefineVariable(0xFFFFF627 & addrMask, "palFadeLen", 1);
	DefineVariable(0xFFFFF628 & addrMask, "vintECount", 1);
	DefineVariable(0xFFFFF62A & addrMask, "vintRoutine", 1);
	DefineVariable(0xFFFFF62C & addrMask, "spriteCount", 1);
	DefineVariable(0xFFFFF636 & addrMask, "rngSeed", 4);
	DefineVariable(0xFFFFF63A & addrMask, "paused", 2);
	DefineVariable(0xFFFFF640 & addrMask, "dmaCmdLow", 2);
	DefineVariable(0xFFFFF646 & addrMask, "waterHeight", 2);
	DefineVariable(0xFFFFF648 & addrMask, "waterHeight2", 2);
	DefineVariable(0xFFFFF64A & addrMask, "destWaterHeight", 2);
	DefineVariable(0xFFFFF64C & addrMask, "waterMoveSpeed", 1);
	DefineVariable(0xFFFFF64D & addrMask, "waterRoutine", 1);
	DefineVariable(0xFFFFF64E & addrMask, "waterFullscreen", 1);
	DefineVariable(0xFFFFF64F & addrMask, "hintUpdates", 1);
	DefineVariable(0xFFFFF666 & addrMask, "aniArtFrames", 6);
	DefineVariable(0xFFFFF66C & addrMask, "aniArtTimers", 6);
	DefineVariable(0xFFFFF680 & addrMask, "plcBuffer", 0x60);
	DefineVariable(0xFFFFF6E0 & addrMask, "plcNemWrite", 4);
	DefineVariable(0xFFFFF6E4 & addrMask, "plcRepeat", 4);
	DefineVariable(0xFFFFF6E8 & addrMask, "plcPixel", 4);
	DefineVariable(0xFFFFF6EC & addrMask, "plcRow", 4);
	DefineVariable(0xFFFFF6F0 & addrMask, "plcRead", 4);
	DefineVariable(0xFFFFF6F4 & addrMask, "plcShift", 4);
	DefineVariable(0xFFFFF6F8 & addrMask, "plcTileCount", 2);
	DefineVariable(0xFFFFF6FA & addrMask, "plcProcTileCnt", 2);
	DefineVariable(0xFFFFF6FC & addrMask, "hintFlag", 2);
	DefineVariable(0xFFFFF700 & addrMask, "cameraX", 4);
	DefineVariable(0xFFFFF704 & addrMask, "cameraY", 4);
	DefineVariable(0xFFFFF708 & addrMask, "cameraBgX", 4);
	DefineVariable(0xFFFFF70C & addrMask, "cameraBgY", 4);
	DefineVariable(0xFFFFF710 & addrMask, "cameraBg2X", 4);
	DefineVariable(0xFFFFF714 & addrMask, "cameraBg2Y", 4);
	DefineVariable(0xFFFFF718 & addrMask, "cameraBg3X", 4);
	DefineVariable(0xFFFFF71C & addrMask, "cameraBg3Y", 4);
	DefineVariable(0xFFFFF720 & addrMask, "destLeftBound", 2);
	DefineVariable(0xFFFFF722 & addrMask, "destRightBound", 2);
	DefineVariable(0xFFFFF724 & addrMask, "destTopBound", 2);
	DefineVariable(0xFFFFF726 & addrMask, "destBottomBound", 2);
	DefineVariable(0xFFFFF728 & addrMask, "leftBound", 2);
	DefineVariable(0xFFFFF72A & addrMask, "rightBound", 2);
	DefineVariable(0xFFFFF72C & addrMask, "topBound", 2);
	DefineVariable(0xFFFFF72E & addrMask, "bottomBound", 2);
	DefineVariable(0xFFFFF730 & addrMask, "unusedF730", 2);
	DefineVariable(0xFFFFF732 & addrMask, "leftBound3", 2);
	DefineVariable(0xFFFFF73A & addrMask, "scrollXDiff", 2);
	DefineVariable(0xFFFFF73C & addrMask, "scrollYDiff", 2);
	DefineVariable(0xFFFFF73E & addrMask, "camYCenter", 2);
	DefineVariable(0xFFFFF740 & addrMask, "unusedF740", 1);
	DefineVariable(0xFFFFF741 & addrMask, "unusedF741", 1);
	DefineVariable(0xFFFFF742 & addrMask, "eventRoutine", 2);
	DefineVariable(0xFFFFF744 & addrMask, "scrollLock", 2);
	DefineVariable(0xFFFFF746 & addrMask, "unusedF746", 2);
	DefineVariable(0xFFFFF748 & addrMask, "unusedF748", 2);
	DefineVariable(0xFFFFF74A & addrMask, "blockCrossX", 1);
	DefineVariable(0xFFFFF74B & addrMask, "blockCrossY", 1);
	DefineVariable(0xFFFFF74C & addrMask, "blockCrossBgX", 1);
	DefineVariable(0xFFFFF74D & addrMask, "blockCrossBgY", 1);
	DefineVariable(0xFFFFF74E & addrMask, "blockCrossBg2X", 1);
	DefineVariable(0xFFFFF74F & addrMask, "blockCrossBg2Y", 1);
	DefineVariable(0xFFFFF750 & addrMask, "blockCrossBg3X", 1);
	DefineVariable(0xFFFFF751 & addrMask, "blockCrossBg3Y", 1);
	DefineVariable(0xFFFFF754 & addrMask, "scrollFlags", 2);
	DefineVariable(0xFFFFF756 & addrMask, "scrollFlagsBg", 2);
	DefineVariable(0xFFFFF758 & addrMask, "scrollFlagsBg2", 2);
	DefineVariable(0xFFFFF75A & addrMask, "scrollFlagsBg3", 2);
	DefineVariable(0xFFFFF75C & addrMask, "btmBoundShift", 2);
	DefineVariable(0xFFFFF75F & addrMask, "sneezeFlag", 1);
	DefineVariable(0xFFFFF760 & addrMask, "sonicTopSpeed", 2);
	DefineVariable(0xFFFFF762 & addrMask, "sonicAcceleration", 2);
	DefineVariable(0xFFFFF764 & addrMask, "sonicDeceleration", 2);
	DefineVariable(0xFFFFF766 & addrMask, "sonicLastFrame", 1);
	DefineVariable(0xFFFFF767 & addrMask, "updateSonicArt", 1);
	DefineVariable(0xFFFFF768 & addrMask, "angleBufferL", 1);
	DefineVariable(0xFFFFF76A & addrMask, "angleBufferR", 1);
	DefineVariable(0xFFFFF76C & addrMask, "objSpawnRoutine", 1);
	DefineVariable(0xFFFFF76E & addrMask, "objPrevChunk", 2);
	DefineVariable(0xFFFFF770 & addrMask, "objChunkRight", 4);
	DefineVariable(0xFFFFF774 & addrMask, "objChunkLeft", 4);
	DefineVariable(0xFFFFF778 & addrMask, "objChunkNullR", 4);
	DefineVariable(0xFFFFF77C & addrMask, "objChunkNullL", 4);
	DefineVariable(0xFFFFF780 & addrMask, "boredTimer", 2);
	DefineVariable(0xFFFFF782 & addrMask, "boredTimerP2", 2);
	DefineVariable(0xFFFFF784 & addrMask, "timeWarpDir", 1);
	DefineVariable(0xFFFFF786 & addrMask, "timeWarpTimer", 2);
	DefineVariable(0xFFFFF788 & addrMask, "lookMode", 1);
	DefineVariable(0xFFFFF78A & addrMask, "demoDataPtr", 4);
	DefineVariable(0xFFFFF78E & addrMask, "demoDataIndex", 2);
	DefineVariable(0xFFFFF790 & addrMask, "demoS1Index", 2);
	DefineVariable(0xFFFFF796 & addrMask, "collisionIDs", 4);
	DefineVariable(0xFFFFF7A0 & addrMask, "camXCenter", 2);
	DefineVariable(0xFFFFF7A7 & addrMask, "bossFlags", 1);
	DefineVariable(0xFFFFF7A8 & addrMask, "sonicRecordIndex", 2);
	DefineVariable(0xFFFFF7AA & addrMask, "bossFight", 1);
	DefineVariable(0xFFFFF7AC & addrMask, "specialChunks", 4);
	DefineVariable(0xFFFFF7B0 & addrMask, "palCycleSteps", 7);
	DefineVariable(0xFFFFF7B7 & addrMask, "palCycleTimers", 7);
	DefineVariable(0xFFFFF7C7 & addrMask, "windTunnelFlag", 1);
	DefineVariable(0xFFFFF7CA & addrMask, "waterSlideFlag", 1);
	DefineVariable(0xFFFFF7CC & addrMask, "ctrlLocked", 1);
	DefineVariable(0xFFFFF7D0 & addrMask, "scoreChain", 2);
	DefineVariable(0xFFFFF7D2 & addrMask, "timeBonus", 2);
	DefineVariable(0xFFFFF7D4 & addrMask, "ringBonus", 2);
	DefineVariable(0xFFFFF7D6 & addrMask, "updateHUDBonus", 1);
	DefineVariable(0xFFFFF7DA & addrMask, "savedSR", 2);
	DefineVariable(0xFFFFF7E0 & addrMask, "switchFlags", 0x20);
	DefineVariable(0xFFFFF800 & addrMask, "sprites", 0x200);
	DefineVariable(0xFFFFFA00 & addrMask, "waterFadePal", 0x80);
	DefineVariable(0xFFFFFA80 & addrMask, "waterPalette", 0x80);
	DefineVariable(0xFFFFFB00 & addrMask, "palette", 0x80);
	DefineVariable(0xFFFFFB80 & addrMask, "fadePalette", 0x80);
	
	objStruct = FindStruct("obj");
	if (objStruct == -1) {
		objStruct = AddStrucEx(-1, "obj", 0);
		
		AddStrucMember(objStruct, "oID", -1, FF_BYTE, -1, 1);
		AddStrucMember(objStruct, "oSprFlags", -1, FF_BYTE, -1, 1);
		AddStrucMember(objStruct, "oTile", -1, FF_WORD, -1, 2);
		AddStrucMember(objStruct, "oSprites", -1, FF_DWRD, -1, 4);
		AddStrucMember(objStruct, "oX", -1, FF_WORD, -1, 2);
		AddStrucMember(objStruct, "oXSub", -1, FF_WORD, -1, 2);
		AddStrucMember(objStruct, "oY", -1, FF_WORD, -1, 2);
		AddStrucMember(objStruct, "oYSub", -1, FF_WORD, -1, 2);
		AddStrucMember(objStruct, "oXVel", -1, FF_WORD, -1, 2);
		AddStrucMember(objStruct, "oYVel", -1, FF_WORD, -1, 2);
		AddStrucMember(objStruct, "oGVel", -1, FF_WORD, -1, 2);
		AddStrucMember(objStruct, "oYRadius", -1, FF_BYTE, -1, 1);
		AddStrucMember(objStruct, "oXRadius", -1, FF_BYTE, -1, 1);
		AddStrucMember(objStruct, "oPriority", -1, FF_BYTE, -1, 1);
		AddStrucMember(objStruct, "oWidth", -1, FF_BYTE, -1, 1);
		AddStrucMember(objStruct, "oSprFrame", -1, FF_BYTE, -1, 1);
		AddStrucMember(objStruct, "oAnimFrame", -1, FF_BYTE, -1, 1);
		AddStrucMember(objStruct, "oAnim", -1, FF_BYTE, -1, 1);
		AddStrucMember(objStruct, "oPrevAnim", -1, FF_BYTE, -1, 1);
		AddStrucMember(objStruct, "oAnimTime", -1, FF_BYTE, -1, 1);
		AddStrucMember(objStruct, "oVar1F", -1, FF_BYTE, -1, 1);
		AddStrucMember(objStruct, "oColType", -1, FF_BYTE, -1, 1);
		AddStrucMember(objStruct, "oColStatus", -1, FF_BYTE, -1, 1);
		AddStrucMember(objStruct, "oFlags", -1, FF_BYTE, -1, 1);
		AddStrucMember(objStruct, "oStateID", -1, FF_BYTE, -1, 1);
		AddStrucMember(objStruct, "oRoutine", -1, FF_BYTE, -1, 1);
		AddStrucMember(objStruct, "oRoutine2", -1, FF_BYTE, -1, 1);
		AddStrucMember(objStruct, "oAngle", -1, FF_BYTE, -1, 1);
		AddStrucMember(objStruct, "oVar27", -1, FF_BYTE, -1, 1);
		AddStrucMember(objStruct, "oSubtype", -1, FF_BYTE, -1, 1);
		AddStrucMember(objStruct, "oSubtype2", -1, FF_BYTE, -1, 1);
		AddStrucMember(objStruct, "oVar2A", -1, FF_BYTE, -1, 1);
		AddStrucMember(objStruct, "oVar2B", -1, FF_BYTE, -1, 1);
		AddStrucMember(objStruct, "oVar2C", -1, FF_BYTE, -1, 1);
		AddStrucMember(objStruct, "oVar2D", -1, FF_BYTE, -1, 1);
		AddStrucMember(objStruct, "oVar2E", -1, FF_BYTE, -1, 1);
		AddStrucMember(objStruct, "oVar2F", -1, FF_BYTE, -1, 1);
		AddStrucMember(objStruct, "oVar30", -1, FF_BYTE, -1, 1);
		AddStrucMember(objStruct, "oVar31", -1, FF_BYTE, -1, 1);
		AddStrucMember(objStruct, "oVar32", -1, FF_BYTE, -1, 1);
		AddStrucMember(objStruct, "oVar33", -1, FF_BYTE, -1, 1);
		AddStrucMember(objStruct, "oVar34", -1, FF_BYTE, -1, 1);
		AddStrucMember(objStruct, "oVar35", -1, FF_BYTE, -1, 1);
		AddStrucMember(objStruct, "oVar36", -1, FF_BYTE, -1, 1);
		AddStrucMember(objStruct, "oVar37", -1, FF_BYTE, -1, 1);
		AddStrucMember(objStruct, "oVar38", -1, FF_BYTE, -1, 1);
		AddStrucMember(objStruct, "oVar39", -1, FF_BYTE, -1, 1);
		AddStrucMember(objStruct, "oVar3A", -1, FF_BYTE, -1, 1);
		AddStrucMember(objStruct, "oVar3B", -1, FF_BYTE, -1, 1);
		AddStrucMember(objStruct, "oVar3C", -1, FF_BYTE, -1, 1);
		AddStrucMember(objStruct, "oVar3D", -1, FF_BYTE, -1, 1);
		AddStrucMember(objStruct, "oVar3E", -1, FF_BYTE, -1, 1);
		AddStrucMember(objStruct, "oVar3F", -1, FF_BYTE, -1, 1);
	}
	
	if (FindStruct("DBGITEM") == -1) {
		auto dbg;
		dbg = AddStrucEx(-1, "DBGITEM", 0);
		
		AddStrucMember(dbg, "id", -1, FF_BYTE, -1, 1);
		AddStrucMember(dbg, "priority", -1, FF_BYTE, -1, 1);
		AddStrucMember(dbg, "sprites", -1, FF_DWRD | FF_0OFF, 0, 4);
		AddStrucMember(dbg, "tile", -1, FF_WORD, -1, 2);
		AddStrucMember(dbg, "subtype", -1, FF_BYTE, -1, 1);
		AddStrucMember(dbg, "flip", -1, FF_BYTE, -1, 1);
		AddStrucMember(dbg, "subtype2", -1, FF_BYTE, -1, 1);
		AddStrucMember(dbg, "frame", -1, FF_BYTE, -1, 1);
	}
	
	auto i;
	for (i = (0xFFFFD000 & addrMask); i < (0xFFFFF000 & addrMask); i = i + 0x40) {
		MakeStructEx(i, -1, "obj");
	}
	
	MakeName(0xFFFFD000 & addrMask, "objPlayerSlot");
	MakeName(0xFFFFD040 & addrMask, "objPlayerSlot2");
	MakeName(0xFFFFD080 & addrMask, "objHUDScoreSlot");
	MakeName(0xFFFFD0C0 & addrMask, "objHUDLivesSlot");
	MakeName(0xFFFFD100 & addrMask, "objTtlCardSlot");
	MakeName(0xFFFFD140 & addrMask, "objHUDRingsSlot");
	MakeName(0xFFFFD180 & addrMask, "objShieldSlot");
	MakeName(0xFFFFD1C0 & addrMask, "objBubblesSlot");
	MakeName(0xFFFFD200 & addrMask, "objInvStar1Slot");
	MakeName(0xFFFFD240 & addrMask, "objInvStar2Slot");
	MakeName(0xFFFFD280 & addrMask, "objInvStar3Slot");
	MakeName(0xFFFFD2C0 & addrMask, "objInvStar4Slot");
	MakeName(0xFFFFD300 & addrMask, "objTimeStar1Slot");
	MakeName(0xFFFFD340 & addrMask, "objTimeStar2Slot");
	MakeName(0xFFFFD380 & addrMask, "objTimeStar3Slot");
	MakeName(0xFFFFD3C0 & addrMask, "objTimeStar4Slot");
	MakeName(0xFFFFD7C0 & addrMask, "objHUDIconSlot");
	MakeName(0xFFFFD800 & addrMask, "dynObjects");
}